// This file was auto-generated by ML.NET Model Builder.
using Microsoft.ML;
using Microsoft.ML.Data;
using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
namespace RainInAustraliaModel
{
    public partial class AussieRainModel
    {
        /// <summary>
        /// model input class for AussieRainModel.
        /// </summary>
        #region model input class
        public class ModelInput
        {
            [LoadColumn(0)]
            [ColumnName(@"Date")]
            public float Date { get; set; }

            [LoadColumn(1)]
            [ColumnName(@"Location")]
            public string Location { get; set; }

            [LoadColumn(2)]
            [ColumnName(@"MinTemp")]
            public float MinTemp { get; set; }

            [LoadColumn(3)]
            [ColumnName(@"MaxTemp")]
            public float MaxTemp { get; set; }

            [LoadColumn(4)]
            [ColumnName(@"Rainfall")]
            public float Rainfall { get; set; }

            [LoadColumn(5)]
            [ColumnName(@"WindGustDir")]
            public string WindGustDir { get; set; }

            [LoadColumn(6)]
            [ColumnName(@"WindGustSpeed")]
            public float WindGustSpeed { get; set; }

            [LoadColumn(7)]
            [ColumnName(@"WindDir9am")]
            public string WindDir9am { get; set; }

            [LoadColumn(8)]
            [ColumnName(@"WindDir3pm")]
            public string WindDir3pm { get; set; }

            [LoadColumn(9)]
            [ColumnName(@"WindSpeed9am")]
            public float WindSpeed9am { get; set; }

            [LoadColumn(10)]
            [ColumnName(@"WindSpeed3pm")]
            public float WindSpeed3pm { get; set; }

            [LoadColumn(11)]
            [ColumnName(@"Humidity9am")]
            public float Humidity9am { get; set; }

            [LoadColumn(12)]
            [ColumnName(@"Humidity3pm")]
            public float Humidity3pm { get; set; }

            [LoadColumn(13)]
            [ColumnName(@"Pressure9am")]
            public float Pressure9am { get; set; }

            [LoadColumn(14)]
            [ColumnName(@"Pressure3pm")]
            public float Pressure3pm { get; set; }

            [LoadColumn(15)]
            [ColumnName(@"Temp9am")]
            public float Temp9am { get; set; }

            [LoadColumn(16)]
            [ColumnName(@"Temp3pm")]
            public float Temp3pm { get; set; }

            [LoadColumn(17)]
            [ColumnName(@"RainToday")]
            public bool RainToday { get; set; }

            [LoadColumn(18)]
            [ColumnName(@"RainTomorrow")]
            public bool RainTomorrow { get; set; }

        }

        #endregion

        /// <summary>
        /// model output class for AussieRainModel.
        /// </summary>
        #region model output class
        public class ModelOutput
        {
            [ColumnName(@"Date")]
            public float Date { get; set; }

            [ColumnName(@"Location")]
            public float[] Location { get; set; }

            [ColumnName(@"MinTemp")]
            public float MinTemp { get; set; }

            [ColumnName(@"MaxTemp")]
            public float MaxTemp { get; set; }

            [ColumnName(@"Rainfall")]
            public float Rainfall { get; set; }

            [ColumnName(@"WindGustDir")]
            public float[] WindGustDir { get; set; }

            [ColumnName(@"WindGustSpeed")]
            public float WindGustSpeed { get; set; }

            [ColumnName(@"WindDir9am")]
            public float[] WindDir9am { get; set; }

            [ColumnName(@"WindDir3pm")]
            public float[] WindDir3pm { get; set; }

            [ColumnName(@"WindSpeed9am")]
            public float WindSpeed9am { get; set; }

            [ColumnName(@"WindSpeed3pm")]
            public float WindSpeed3pm { get; set; }

            [ColumnName(@"Humidity9am")]
            public float Humidity9am { get; set; }

            [ColumnName(@"Humidity3pm")]
            public float Humidity3pm { get; set; }

            [ColumnName(@"Pressure9am")]
            public float Pressure9am { get; set; }

            [ColumnName(@"Pressure3pm")]
            public float Pressure3pm { get; set; }

            [ColumnName(@"Temp9am")]
            public float Temp9am { get; set; }

            [ColumnName(@"Temp3pm")]
            public float Temp3pm { get; set; }

            [ColumnName(@"RainToday")]
            public float RainToday { get; set; }

            [ColumnName(@"RainTomorrow")]
            public bool RainTomorrow { get; set; }

            [ColumnName(@"Features")]
            public float[] Features { get; set; }

            [ColumnName(@"PredictedLabel")]
            public bool PredictedLabel { get; set; }

            [ColumnName(@"Score")]
            public float Score { get; set; }

            [ColumnName(@"Probability")]
            public float Probability { get; set; }

        }

        #endregion

        private static string MLNetModelPath = Path.GetFullPath("AussieRainModel.mlnet");

        public static readonly Lazy<PredictionEngine<ModelInput, ModelOutput>> PredictEngine = new Lazy<PredictionEngine<ModelInput, ModelOutput>>(() => CreatePredictEngine(), true);


        private static PredictionEngine<ModelInput, ModelOutput> CreatePredictEngine()
        {
            var mlContext = new MLContext();
            ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);
            return mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);
        }

        /// <summary>
        /// Use this method to predict on <see cref="ModelInput"/>.
        /// </summary>
        /// <param name="input">model input.</param>
        /// <returns><seealso cref=" ModelOutput"/></returns>
        public static ModelOutput Predict(ModelInput input)
        {
            var predEngine = PredictEngine.Value;
            return predEngine.Predict(input);
        }

    }
}
